// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shader.Data;

#nullable disable

namespace Shader.Migrations
{
    [DbContext(typeof(ShaderContext))]
    partial class ShaderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CashTransactionFruit", b =>
                {
                    b.Property<int>("CashTransactionId")
                        .HasColumnType("int");

                    b.Property<int>("FruitId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCages")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceOfKiloGram")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WeightInKilograms")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("CashTransactionId", "FruitId");

                    b.HasIndex("FruitId");

                    b.ToTable("CashTransactionFruits");
                });

            modelBuilder.Entity("ClientTransactionFruit", b =>
                {
                    b.Property<int>("ClientTransactionId")
                        .HasColumnType("int");

                    b.Property<int>("FruitId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCages")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceOfKiloGram")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WeightInKilograms")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ClientTransactionId", "FruitId");

                    b.HasIndex("FruitId");

                    b.ToTable("ClientTransactionFruits");
                });

            modelBuilder.Entity("Shader.Data.Entities.CashTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FruitId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("FruitId");

                    b.ToTable("CashTransactions");
                });

            modelBuilder.Entity("Shader.Data.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalDiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalMortgageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalMortgageAmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Shader.Data.Entities.ClientPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MortgageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientPayments");
                });

            modelBuilder.Entity("Shader.Data.Entities.ClientTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("FruitId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCageMortgageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("FruitId");

                    b.ToTable("ClientTransactions");
                });

            modelBuilder.Entity("Shader.Data.Entities.DailyEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DailySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DailyEmployees");
                });

            modelBuilder.Entity("Shader.Data.Entities.DailyEmployeeAbsence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DailyEmpAbsences");
                });

            modelBuilder.Entity("Shader.Data.Entities.DailySalaryRecording", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("DailySalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("DailyEmpSalaryRecordings");
                });

            modelBuilder.Entity("Shader.Data.Entities.EmployeeLoan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("EmployeeLoans");
                });

            modelBuilder.Entity("Shader.Data.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Shader.Data.Entities.Fruit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CageMortgageValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FruitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsBilled")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCageHasMortgage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MashalValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MerchantAsSupplierPurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NumberOfKilogramsSold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("NylonValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceOfKilogramInBill")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceOfKilogramsSold")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("RemainingCages")
                        .HasColumnType("int");

                    b.Property<int>("SoldCages")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("SupplierBillId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<int>("TotalCages")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SupplierBillId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Fruits");
                });

            modelBuilder.Entity("Shader.Data.Entities.Merchant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PurchaseAmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchasePrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseTotalDiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseTotalMortgageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PurchaseTotalMortgageAmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellAmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellTotalDiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellTotalMortgageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SellTotalMortgageAmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Merchants");
                });

            modelBuilder.Entity("Shader.Data.Entities.MerchantPayment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantId")
                        .HasColumnType("int");

                    b.Property<decimal>("MortgageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MerchantId");

                    b.ToTable("MerchantPayments");
                });

            modelBuilder.Entity("Shader.Data.Entities.MerchantTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MerchantId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCageMortgageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MerchantId");

                    b.ToTable("MerchantTransactions");
                });

            modelBuilder.Entity("Shader.Data.Entities.MerchantTransactionFruit", b =>
                {
                    b.Property<int>("MerchantTransactionId")
                        .HasColumnType("int");

                    b.Property<int>("FruitId")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfCages")
                        .HasColumnType("int");

                    b.Property<decimal>("PriceOfKiloGram")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TransactionPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WeightInKilograms")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("MerchantTransactionId", "FruitId");

                    b.HasIndex("FruitId");

                    b.ToTable("MerchantTransactionFruits");
                });

            modelBuilder.Entity("Shader.Data.Entities.MonthlyEmployee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BorrowedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MonthlyEmployees");
                });

            modelBuilder.Entity("Shader.Data.Entities.MonthlyEmployeeAbsence", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("MonthlyEmpAbsences");
                });

            modelBuilder.Entity("Shader.Data.Entities.MonthlySalaryRecording", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("BaseSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("BorrowedAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("Date")
                        .HasColumnType("date");

                    b.Property<decimal>("DeductionAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.ToTable("MonthlyEmpSalaryRecordings");
                });

            modelBuilder.Entity("Shader.Data.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMerchant")
                        .HasColumnType("bit");

                    b.Property<int?>("MerchantId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmountOfBills")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRemainingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("MerchantId");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Shader.Data.Entities.SupplierBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CommissionRate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<decimal>("MyCommisionValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValueDueToSupplier")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("SupplierId");

                    b.ToTable("SupplierBills");
                });

            modelBuilder.Entity("CashTransactionFruit", b =>
                {
                    b.HasOne("Shader.Data.Entities.CashTransaction", "CashTransaction")
                        .WithMany("CashTransactionFruits")
                        .HasForeignKey("CashTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shader.Data.Entities.Fruit", "Fruit")
                        .WithMany()
                        .HasForeignKey("FruitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CashTransaction");

                    b.Navigation("Fruit");
                });

            modelBuilder.Entity("ClientTransactionFruit", b =>
                {
                    b.HasOne("Shader.Data.Entities.ClientTransaction", "ClientTransaction")
                        .WithMany("ClientTransactionFruits")
                        .HasForeignKey("ClientTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shader.Data.Entities.Fruit", "Fruit")
                        .WithMany()
                        .HasForeignKey("FruitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientTransaction");

                    b.Navigation("Fruit");
                });

            modelBuilder.Entity("Shader.Data.Entities.CashTransaction", b =>
                {
                    b.HasOne("Shader.Data.Entities.Fruit", null)
                        .WithMany("CashTransactions")
                        .HasForeignKey("FruitId");
                });

            modelBuilder.Entity("Shader.Data.Entities.ClientPayment", b =>
                {
                    b.HasOne("Shader.Data.Entities.Client", "Client")
                        .WithMany("Payments")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Shader.Data.Entities.ClientTransaction", b =>
                {
                    b.HasOne("Shader.Data.Entities.Client", "Client")
                        .WithMany("Transactions")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shader.Data.Entities.Fruit", null)
                        .WithMany("ClientTransactions")
                        .HasForeignKey("FruitId");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Shader.Data.Entities.DailyEmployeeAbsence", b =>
                {
                    b.HasOne("Shader.Data.Entities.DailyEmployee", "Employee")
                        .WithMany("Absenses")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Shader.Data.Entities.DailySalaryRecording", b =>
                {
                    b.HasOne("Shader.Data.Entities.DailyEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Shader.Data.Entities.EmployeeLoan", b =>
                {
                    b.HasOne("Shader.Data.Entities.MonthlyEmployee", "Employee")
                        .WithMany("Loans")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Shader.Data.Entities.Fruit", b =>
                {
                    b.HasOne("Shader.Data.Entities.SupplierBill", null)
                        .WithMany("Fruits")
                        .HasForeignKey("SupplierBillId");

                    b.HasOne("Shader.Data.Entities.Supplier", "Supplier")
                        .WithMany("Fruits")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Shader.Data.Entities.MerchantPayment", b =>
                {
                    b.HasOne("Shader.Data.Entities.Merchant", "Merchant")
                        .WithMany("Payments")
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merchant");
                });

            modelBuilder.Entity("Shader.Data.Entities.MerchantTransaction", b =>
                {
                    b.HasOne("Shader.Data.Entities.Merchant", "Merchant")
                        .WithMany("Transactions")
                        .HasForeignKey("MerchantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Merchant");
                });

            modelBuilder.Entity("Shader.Data.Entities.MerchantTransactionFruit", b =>
                {
                    b.HasOne("Shader.Data.Entities.Fruit", "Fruit")
                        .WithMany()
                        .HasForeignKey("FruitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Shader.Data.Entities.MerchantTransaction", "MerchantTransaction")
                        .WithMany("MerchantTransactionFruits")
                        .HasForeignKey("MerchantTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fruit");

                    b.Navigation("MerchantTransaction");
                });

            modelBuilder.Entity("Shader.Data.Entities.MonthlyEmployeeAbsence", b =>
                {
                    b.HasOne("Shader.Data.Entities.MonthlyEmployee", "Employee")
                        .WithMany("Absences")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Shader.Data.Entities.MonthlySalaryRecording", b =>
                {
                    b.HasOne("Shader.Data.Entities.MonthlyEmployee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("Shader.Data.Entities.Supplier", b =>
                {
                    b.HasOne("Shader.Data.Entities.Merchant", "Merchant")
                        .WithMany()
                        .HasForeignKey("MerchantId");

                    b.Navigation("Merchant");
                });

            modelBuilder.Entity("Shader.Data.Entities.SupplierBill", b =>
                {
                    b.HasOne("Shader.Data.Entities.Supplier", "Supplier")
                        .WithMany("SupplierBills")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("Shader.Data.Entities.CashTransaction", b =>
                {
                    b.Navigation("CashTransactionFruits");
                });

            modelBuilder.Entity("Shader.Data.Entities.Client", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Shader.Data.Entities.ClientTransaction", b =>
                {
                    b.Navigation("ClientTransactionFruits");
                });

            modelBuilder.Entity("Shader.Data.Entities.DailyEmployee", b =>
                {
                    b.Navigation("Absenses");
                });

            modelBuilder.Entity("Shader.Data.Entities.Fruit", b =>
                {
                    b.Navigation("CashTransactions");

                    b.Navigation("ClientTransactions");
                });

            modelBuilder.Entity("Shader.Data.Entities.Merchant", b =>
                {
                    b.Navigation("Payments");

                    b.Navigation("Transactions");
                });

            modelBuilder.Entity("Shader.Data.Entities.MerchantTransaction", b =>
                {
                    b.Navigation("MerchantTransactionFruits");
                });

            modelBuilder.Entity("Shader.Data.Entities.MonthlyEmployee", b =>
                {
                    b.Navigation("Absences");

                    b.Navigation("Loans");
                });

            modelBuilder.Entity("Shader.Data.Entities.Supplier", b =>
                {
                    b.Navigation("Fruits");

                    b.Navigation("SupplierBills");
                });

            modelBuilder.Entity("Shader.Data.Entities.SupplierBill", b =>
                {
                    b.Navigation("Fruits");
                });
#pragma warning restore 612, 618
        }
    }
}
