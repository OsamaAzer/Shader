// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Shader.Data;

#nullable disable

namespace Shader.Migrations
{
    [DbContext(typeof(ShaderContext))]
    partial class ShaderContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CageDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("CageMortgageValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NumberOfMortgagePaidCages")
                        .HasColumnType("int");

                    b.Property<int>("RemainingCages")
                        .HasColumnType("int");

                    b.Property<int>("ReturnedCages")
                        .HasColumnType("int");

                    b.Property<int>("SoldCages")
                        .HasColumnType("int");

                    b.Property<int>("TotalCages")
                        .HasColumnType("int");

                    b.Property<int>("UnReturnedCages")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CageDetails");
                });

            modelBuilder.Entity("Shader.Data.Entities.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalMortgageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalMortgageAmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalNumberOfCagesReturned")
                        .HasColumnType("int");

                    b.Property<int>("TotalNumberOfCagesTook")
                        .HasColumnType("int");

                    b.Property<int>("TotalNumberOfUnReturnedCages")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalRemainingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRemainingMortgageAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("Shader.Data.Entities.Expense", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Expenses");
                });

            modelBuilder.Entity("Shader.Data.Entities.Fruit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CageDetailsId")
                        .HasColumnType("int");

                    b.Property<string>("FruitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("TotalAmountReceived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountRemain")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountSold")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CageDetailsId");

                    b.ToTable("Fruits");
                });

            modelBuilder.Entity("Shader.Data.Entities.Owner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("AmountOfRateTookFromSuppliers")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalRemainingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Owners");
                });

            modelBuilder.Entity("Shader.Data.Entities.Supplier", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Suppliers");
                });

            modelBuilder.Entity("Shader.Data.Entities.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(21)
                        .HasColumnType("nvarchar(21)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Transactions");

                    b.HasDiscriminator().HasValue("Transaction");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Shader.Data.Entities.ClientTransaction", b =>
                {
                    b.HasBaseType("Shader.Data.Entities.Transaction");

                    b.Property<decimal>("AmountPaid")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ClientId")
                        .HasColumnType("int");

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("NumberOfCagesTook")
                        .HasColumnType("int");

                    b.Property<double>("OwnerRate")
                        .HasColumnType("float");

                    b.Property<decimal>("OwnerRateAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PricePerKilogram")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("RemainingAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("WeightInKilograms")
                        .HasColumnType("decimal(18,2)");

                    b.HasIndex("ClientId");

                    b.HasDiscriminator().HasValue("ClientTransaction");
                });

            modelBuilder.Entity("Shader.Data.Entities.SupplierTransaction", b =>
                {
                    b.HasBaseType("Shader.Data.Entities.Transaction");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasIndex("SupplierId");

                    b.HasDiscriminator().HasValue("SupplierTransaction");
                });

            modelBuilder.Entity("Shader.Data.Entities.Fruit", b =>
                {
                    b.HasOne("CageDetails", "CageDetails")
                        .WithMany()
                        .HasForeignKey("CageDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CageDetails");
                });

            modelBuilder.Entity("Shader.Data.Entities.ClientTransaction", b =>
                {
                    b.HasOne("Shader.Data.Entities.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Shader.Data.Entities.SupplierTransaction", b =>
                {
                    b.HasOne("Shader.Data.Entities.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });
#pragma warning restore 612, 618
        }
    }
}
